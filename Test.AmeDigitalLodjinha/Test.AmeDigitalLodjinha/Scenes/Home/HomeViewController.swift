//
//  HomeViewController.swift
//  Test.AmeDigitalLodjinha
//
//  Created by Leandro Romano on 14/06/19.
//  Copyright (c) 2019 Leandro Romano. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeDisplayLogic: class {
    func displayNavigationLogo()
    func displayBannersLoading()
    func displayBanners(viewModel: Home.Banner.ViewModel)
}

class HomeViewController: UITableViewController {
    
    var interactor: HomeBusinessLogic?
    var router: (NSObjectProtocol & HomeRoutingLogic & HomeDataPassing)?

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    private func setup() {
        let viewController = self
        let interactor = HomeInteractor()
        let presenter = HomePresenter()
        let router = HomeRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }

    override func viewDidLoad() {
        super.viewDidLoad()
        setupView()
    }

    //@IBOutlet weak var nameTextField: UITextField!
    
    private func setupView() {
        setupNavigationLogo()
        setupBanners()
    }

    private func setupNavigationLogo() {
        interactor?.setNavigationLogoView()
    }
    
    private func setupBanners() {
        interactor?.setBannersContentLoading()
        interactor?.getBannersContent()
    }

}

extension HomeViewController: HomeDisplayLogic {
    
    func displayNavigationLogo() {
        let logoNavbar = UIImage(named: "logoNavbar")
        if let logo = logoNavbar {
            let imageView = UIImageView(image: logo)
            self.navigationItem.titleView = imageView
        }
    }
    
    func displayBannersLoading() {
        let container: UIView = UIView()
        container.frame = CGRect(x: 0, y: 0, width: self.tableView.frame.width, height: 200)
        container.backgroundColor = Constants.mainColor
        
        let activityView = UIActivityIndicatorView(style: .whiteLarge)
        activityView.center = container.center
        activityView.startAnimating()
        container.addSubview(activityView)
        
        self.setupTableViewHeader(contentView: container)
    }
    
    func displayBanners(viewModel: Home.Banner.ViewModel) {
        let sliderView = ProductsSliderView(images: viewModel.banners.map { $0.photo })
        sliderView.translatesAutoresizingMaskIntoConstraints = false
        
        self.setupTableViewHeader(contentView: sliderView)
    }
    
}



